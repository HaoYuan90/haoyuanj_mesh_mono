name: Docker Image For Chat Service

on:
  push:
    branches: [ "main" ]
    paths:
      - 'chat-service/**'
  workflow_dispatch:

env:
  SERVICE_NAME: chat-service
  OTP_VERSION: 26
  ELIXIR_VERSION: 1.18.3

jobs:

  build-and-publish:

    runs-on: ubuntu-latest

    permissions:
      actions: write  # for Git tag creation
      contents: write  # for Git tag creation
      id-token: write  # for actions/attest-build-provenance
      attestations: write  # for actions/attest-build-provenance

    steps:
      - uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ env.OTP_VERSION }}
          elixir-version: ${{ env.ELIXIR_VERSION }}

      - name: Set version
        run: |
          echo "VERSION=$(date +%Y%m%d.%s)" >> $GITHUB_ENV

      - name: Push Git tag
        run: |
          git tag "${{ env.SERVICE_NAME }}-${{ env.VERSION }}"
          git push origin "${{ env.SERVICE_NAME }}-${{ env.VERSION }}"

      - name: Extract metadata for Docker image labelling
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKERHUB_USERNAME }}/mesh-mono-${{ env.SERVICE_NAME }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        id: push-docker-image
        uses: docker/build-push-action@v6
        with:
          context: ./${{ env.SERVICE_NAME }}
          file: ./${{ env.SERVICE_NAME }}/Dockerfile
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/mesh-mono-${{ env.SERVICE_NAME }}:${{ env.VERSION }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: index.docker.io/${{ vars.DOCKERHUB_USERNAME }}/mesh-mono-${{ env.SERVICE_NAME }}
          subject-digest: ${{ steps.push-docker-image.outputs.digest }}
          push-to-registry: true
